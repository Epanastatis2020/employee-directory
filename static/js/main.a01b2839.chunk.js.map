{"version":3,"sources":["components/Header/Header.js","api/API.js","components/Search/Search.js","components/Nav/Nav.js","components/Table/TableData.js","components/Table/TableArea.js","components/Main/Main.js","components/Wrapper/Wrapper.js","components/containers/App.js","serviceWorker.js","index.js"],"names":["Header","className","axios","get","SearchForm","props","value","search","type","onChange","handleSearchChange","placeholder","Nav","id","DataTable","columns","map","column","onClick","handleSort","colName","scope","filteredEmployees","employee","alt","src","picture","thumbnail","name","first","last","phone","href","email","dateFormat","dob","date","DataArea","state","originalEmployees","order","event","newFilteredEmployees","filter","toLowerCase","includes","target","setState","loadEmployeeData","API","then","res","data","results","catch","err","console","log","this","clickedColumn","objIndex","sortedEmployees","columnTracker","ascDesc","find","sort","a","b","findIndex","obj","bind","Component","Main","TableArea","Wrapper","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a01b2839.chunk.js","sourcesContent":["import \"./Header.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header text-center\">\r\n          <h2>Employee Directory</h2>\r\n          <p>Click on carrots to filter by heading or use the search box to narrow your results</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nexport default {\r\n  getEmployeeList: function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=50&inc=name,phone,nat,email,picture,dob&nat=au\");\r\n  }\r\n};","import React from \"react\";\r\nimport './Search.css';\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-12 d-flex justify-content-center\">\r\n                <input \r\n                    value={props.search}\r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    onChange={props.handleSearchChange}\r\n                    placeholder=\"Search\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport SearchBox from '../Search/Search';\r\nimport './Nav.css';\r\n\r\nfunction Nav( {handleSearchChange }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n        <div className=\"navbar-collapse row\" id=\"navbarNav\">    \r\n            <SearchBox handleSearchChange={handleSearchChange} />                    \r\n        </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport './Table.css';\r\nimport dateFormat from 'dateformat';\r\n\r\nfunction DataTable(props) {\r\n    return (\r\n\r\n        <table className=\"table table-striped\">\r\n            <thead>\r\n                <tr className=\"tr-header\">\r\n                    {props.columns.map(column => (                        \r\n                        <th onClick={() => props.handleSort(column.colName)} scope=\"col\" key={column.colName}>{column.colName} <i className=\"fa fa-fw fa-sort\"></i></th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.filteredEmployees.map(employee => (\r\n                    <tr className=\"tr-stuff\" key={employee.email}>\r\n                        <td><img alt=\"employee\" src={employee.picture.thumbnail}/></td>\r\n                        <td>{employee.name.first + \" \" + employee.name.last}</td>\r\n                        <td>{employee.phone}</td>\r\n                        <td><a href={employee.email}>{employee.email}</a></td>                        \r\n                        <td>{dateFormat(`${employee.dob.date}`,\"dd/mm/yyyy\")}</td>  \r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n      );\r\n}\r\n\r\nexport default DataTable;","import React, { Component } from \"react\";\r\nimport API from \"../../api/API\"\r\nimport Nav from \"../Nav/Nav\"\r\nimport DataTable from \"./TableData\";\r\n\r\nclass DataArea extends Component {\r\n  state = {\r\n    originalEmployees: [],\r\n    filteredEmployees: [],\r\n    columns: [\r\n      {\r\n        colName: \"Picture\",\r\n        order: \"D\"\r\n      },\r\n      {\r\n        colName: \"Name\",\r\n        order: \"D\"\r\n      },\r\n      {\r\n        colName: \"Phone\",\r\n        order: \"D\"\r\n      },\r\n      {\r\n        colName: \"Email\",\r\n        order: \"D\"\r\n      }, \r\n      {\r\n        colName: \"DOB\",\r\n        order: \"D\"\r\n      }            \r\n\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadEmployeeData();    \r\n  }\r\n\r\n  handleSearchChange = event => {\r\n    const newFilteredEmployees = this.state.originalEmployees.filter(employee => employee.name.first.toLowerCase().includes(event.target.value.toLowerCase()) || employee.name.last.toLowerCase().includes(event.target.value.toLowerCase()));    \r\n    this.setState({ filteredEmployees: newFilteredEmployees });\r\n  };\r\n  \r\n  handleSort(clickedColumn) {   \r\n    let objIndex\r\n    let sortedEmployees=[]\r\n    let columnTracker=this.state.columns\r\n    const obj = this.state.columns.find(column => column.colName === clickedColumn)\r\n    let ascDesc = obj.order  //if obj.order is \"D\", it means it was sorted descending last time, so this time should be ascending\r\n\r\n    switch(clickedColumn) {\r\n        case \"Name\":  \r\n          if (ascDesc === \"D\") {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => (a.name.first > b.name.first) ? 1:-1)\r\n            objIndex = columnTracker.findIndex((obj => obj.colName === \"Name\"))\r\n            columnTracker[objIndex].order = \"A\";\r\n          }\r\n          else {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => (a.name.first > b.name.first) ? -1:1) \r\n            objIndex = columnTracker.findIndex((obj => obj.colName === \"Name\"))\r\n            columnTracker[objIndex].order = \"D\";\r\n          }\r\n          break;\r\n\r\n        case \"Phone\":  \r\n          if (ascDesc === \"D\") {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => (a.phone > b.phone) ? 1:-1)\r\n            objIndex = columnTracker.findIndex((obj => obj.colName === \"Phone\"))\r\n            columnTracker[objIndex].order = \"A\";\r\n          }\r\n          else {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => (a.phone > b.phone) ? -1:1) \r\n            objIndex = columnTracker.findIndex((obj => obj.colName === \"Phone\"))\r\n            columnTracker[objIndex].order = \"D\";\r\n          }\r\n          break;     \r\n          \r\n        case \"Email\":  \r\n          if (ascDesc === \"D\") {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => (a.email > b.email) ? 1:-1)\r\n            objIndex = columnTracker.findIndex((obj => obj.colName === \"Email\"))\r\n            columnTracker[objIndex].order = \"A\";\r\n          }\r\n          else {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => (a.email > b.email) ? -1:1) \r\n            objIndex = columnTracker.findIndex((obj => obj.colName === \"Email\"))\r\n            columnTracker[objIndex].order = \"D\";\r\n          }\r\n          break;    \r\n          \r\n        case \"DOB\":  \r\n          if (ascDesc === \"D\") {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => (a.dob.date > b.dob.date) ? 1:-1)\r\n            objIndex = columnTracker.findIndex((obj => obj.colName === \"DOB\"))\r\n            columnTracker[objIndex].order = \"A\";\r\n          }\r\n          else {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => (a.dob.date > b.dob.date) ? -1:1) \r\n            objIndex = columnTracker.findIndex((obj => obj.colName === \"DOB\"))\r\n            columnTracker[objIndex].order = \"D\";\r\n          } \r\n          break;\r\n        default:\r\n          if (ascDesc === \"D\") {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => (a.name.first > b.name.first) ? 1:-1)\r\n            objIndex = columnTracker.findIndex((obj => obj.colName === \"Picture\"))\r\n            columnTracker[objIndex].order = \"A\";\r\n          }\r\n          else {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a,b) => (a.name.first > b.name.first) ? -1:1) \r\n            objIndex = columnTracker.findIndex((obj => obj.colName === \"Picture\"))\r\n            columnTracker[objIndex].order = \"D\";\r\n          }\r\n          break;                      \r\n    }\r\n\r\n    this.setState({ filteredEmployees: sortedEmployees,\r\n                    columns: columnTracker});  \r\n\r\n  }  \r\n\r\n\r\n\r\n  loadEmployeeData = () => {\r\n    API.getEmployeeList()\r\n      .then(res => \r\n        this.setState({\r\n          originalEmployees: res.data.results,\r\n          filteredEmployees: res.data.results\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n     \r\n  };\r\n\r\n  render() {\r\n      return (\r\n        <>\r\n          <Nav handleSearchChange={this.handleSearchChange} />\r\n          <div className=\"col-sm-12 d-flex justify-content-center\">\r\n              <DataTable \r\n                filteredEmployees={this.state.filteredEmployees}\r\n                handleSort={this.handleSort.bind(this)}              \r\n                columns={this.state.columns}\r\n              />\r\n          </div>\r\n        </>\r\n      );\r\n  }\r\n};\r\n\r\nexport default DataArea;","import React, { Component } from \"react\";\r\nimport TableArea from \"../Table/TableArea\";\r\nimport './Main.css'\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <TableArea />\r\n            </>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <main className=\"wrapper\" {...props}/>;\r\n}\r\n\r\nexport default Wrapper;","import './App.css';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Wrapper from '../Wrapper/Wrapper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}